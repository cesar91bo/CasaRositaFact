// <auto-generated />
using System;
using CasaRositaFact.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CasaRositaFact.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CasaRositaFact.Models.Articulo", b =>
                {
                    b.Property<int>("IdArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArticulo"));

                    b.Property<decimal?>("CantidadMinima")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CodigoProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimoIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int?>("IdRubro")
                        .HasColumnType("int");

                    b.Property<int?>("IdUnidadMedida")
                        .HasColumnType("int");

                    b.Property<bool>("LlevarStock")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("StockActual")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdArticulo");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdRubro");

                    b.HasIndex("IdUnidadMedida");

                    b.ToTable("Articulos", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.Banco", b =>
                {
                    b.Property<int>("IdBanco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBanco"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBanco");

                    b.ToTable("Bancos", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CUIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRegimenImpositivo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDocumento")
                        .HasColumnType("int");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoDocumentoIdTipoDocumento")
                        .HasColumnType("int");

                    b.HasKey("IdCliente");

                    b.HasIndex("IdRegimenImpositivo");

                    b.HasIndex("IdTipoDocumento");

                    b.HasIndex("TipoDocumentoIdTipoDocumento");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpresa"));

                    b.Property<int?>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("CondicionIva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaExpiracionCertificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("IIBB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InicioActividad")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreFantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RutaCertificado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerieCertificado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpresa");

                    b.ToTable("Empresas", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.Localidad", b =>
                {
                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLocalidad");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Localidades", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.Parametro", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadMaxItemFactura")
                        .HasColumnType("int");

                    b.Property<string>("ImpresoraPredeterminada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PorcentajeGanancia")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)");

                    b.HasKey("IdEmpresa");

                    b.ToTable("Parametros", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.PrecioArticulo", b =>
                {
                    b.Property<int>("IdPrecioArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrecioArticulo"));

                    b.Property<bool>("EsPrecioCosto")
                        .HasColumnType("bit");

                    b.Property<bool>("EsPrecioDescuento")
                        .HasColumnType("bit");

                    b.Property<bool>("EsPrecioLista")
                        .HasColumnType("bit");

                    b.Property<bool>("EsPrecioPublico")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaIncio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoIva")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoIva");

                    b.Property<decimal>("PorcentajeGanancia")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal>("PrecioCosto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioDescuento")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioLista")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioVentaConIva")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioVentaSinIva")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TipoIvaIdTipoIva")
                        .HasColumnType("int");

                    b.HasKey("IdPrecioArticulo");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdTipoIva");

                    b.HasIndex("TipoIvaIdTipoIva");

                    b.ToTable("PreciosArticulos", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("CBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdBanco")
                        .HasColumnType("int");

                    b.Property<string>("NombreContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProveedor");

                    b.HasIndex("IdBanco");

                    b.ToTable("Proveedores", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.Provincia", b =>
                {
                    b.Property<int>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvincia"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProvincia");

                    b.ToTable("Provincias", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.RegimenImpositivo", b =>
                {
                    b.Property<int>("IdRegimenImpositivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegimenImpositivo"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRegimenImpositivo");

                    b.ToTable("RegimenesImpositivos", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.Rubro", b =>
                {
                    b.Property<int>("IdRubro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRubro"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRubro");

                    b.ToTable("Rubros", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.TipoDocumento", b =>
                {
                    b.Property<int>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoDocumento"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("TiposDocumentos", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.TipoIva", b =>
                {
                    b.Property<int>("IdTipoIva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoIva"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Porcentaje")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdTipoIva");

                    b.ToTable("TiposIva", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.UnidadMedida", b =>
                {
                    b.Property<int>("IdUnidadMedida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUnidadMedida"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUnidadMedida");

                    b.ToTable("UnidadesMedida", (string)null);
                });

            modelBuilder.Entity("CasaRositaFact.Models.Articulo", b =>
                {
                    b.HasOne("CasaRositaFact.Models.Categoria", "Categoria")
                        .WithMany("Articulos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CasaRositaFact.Models.Proveedor", "Proveedor")
                        .WithMany("Articulos")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CasaRositaFact.Models.Rubro", "Rubro")
                        .WithMany("Articulos")
                        .HasForeignKey("IdRubro")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CasaRositaFact.Models.UnidadMedida", "UnidadMedida")
                        .WithMany("Articulos")
                        .HasForeignKey("IdUnidadMedida")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Categoria");

                    b.Navigation("Proveedor");

                    b.Navigation("Rubro");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("CasaRositaFact.Models.Cliente", b =>
                {
                    b.HasOne("CasaRositaFact.Models.RegimenImpositivo", "RegimenImpositivo")
                        .WithMany()
                        .HasForeignKey("IdRegimenImpositivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasaRositaFact.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasaRositaFact.Models.TipoDocumento", null)
                        .WithMany("Clientes")
                        .HasForeignKey("TipoDocumentoIdTipoDocumento");

                    b.Navigation("RegimenImpositivo");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("CasaRositaFact.Models.Localidad", b =>
                {
                    b.HasOne("CasaRositaFact.Models.Provincia", "Provincia")
                        .WithMany("Localidades")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("CasaRositaFact.Models.Parametro", b =>
                {
                    b.HasOne("CasaRositaFact.Models.Empresa", "Empresa")
                        .WithOne("Parametro")
                        .HasForeignKey("CasaRositaFact.Models.Parametro", "IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("CasaRositaFact.Models.PrecioArticulo", b =>
                {
                    b.HasOne("CasaRositaFact.Models.Articulo", "Articulo")
                        .WithMany("PreciosArticulos")
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasaRositaFact.Models.TipoIva", "TipoIva")
                        .WithMany()
                        .HasForeignKey("IdTipoIva")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CasaRositaFact.Models.TipoIva", null)
                        .WithMany("PreciosArticulos")
                        .HasForeignKey("TipoIvaIdTipoIva");

                    b.Navigation("Articulo");

                    b.Navigation("TipoIva");
                });

            modelBuilder.Entity("CasaRositaFact.Models.Proveedor", b =>
                {
                    b.HasOne("CasaRositaFact.Models.Banco", "Banco")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdBanco")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Banco");
                });

            modelBuilder.Entity("CasaRositaFact.Models.Articulo", b =>
                {
                    b.Navigation("PreciosArticulos");
                });

            modelBuilder.Entity("CasaRositaFact.Models.Banco", b =>
                {
                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("CasaRositaFact.Models.Categoria", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("CasaRositaFact.Models.Empresa", b =>
                {
                    b.Navigation("Parametro")
                        .IsRequired();
                });

            modelBuilder.Entity("CasaRositaFact.Models.Proveedor", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("CasaRositaFact.Models.Provincia", b =>
                {
                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("CasaRositaFact.Models.Rubro", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("CasaRositaFact.Models.TipoDocumento", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("CasaRositaFact.Models.TipoIva", b =>
                {
                    b.Navigation("PreciosArticulos");
                });

            modelBuilder.Entity("CasaRositaFact.Models.UnidadMedida", b =>
                {
                    b.Navigation("Articulos");
                });
#pragma warning restore 612, 618
        }
    }
}
