@page "/facturas/formFactura"
@page "/facturas/editar/{FacturaId:int}"
@using CasaRositaFact.Components.Pages.Auxiliares
@using CasaRositaFact.Components.Pages.Facturaciones
@using CasaRositaFact.Components.Pages.Clientes
@using Services
@using Data.Entities
@using static CasaRositaFact.Data.Entities.Factura
@inject ClienteService ClienteService
@inject FacturaService FacturaService
@inject IJSRuntime JS
@inject NavigationManager NavigationManager

<h3 class="mb-2 text-info fw-bold border-bottom pb-2">@(FacturaId == null ? "Nueva Factura" : "Editar Factura")</h3>

<EditForm Model="factura" OnValidSubmit="GuardarFactura">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h3 class="mb-3 text-secondary fw-bold border-bottom pb-2">Cabecera de Factura</h3>

    <!-- Búsqueda de Cliente -->
    <div class="row mb-3 align-items-end">
        <!-- Input ID Cliente -->
        <div class="col-md-2">
            <label for="IdCliente" class="form-label">ID Cliente</label>
            <InputNumber id="IdCliente" class="form-control" @bind-Value="IdClienteBuscado" />
        </div>

        <!-- Botón Buscar -->
        <div class="col-md-1">
            <label class="form-label d-block">&nbsp;</label>
            <button type="button" class="btn btn-outline-primary w-100" @onclick="BuscarCliente">
                <i class="bi bi-search"></i> <!-- Bootstrap Icons: lupa -->
            </button>
        </div>

        <div class="col-md-1">
            <label class="form-label d-block">&nbsp;</label>
            <button type="button" class="btn btn-outline-secondary w-100" @onclick="MostrarModalClientes">
                <i class="bi bi-people"></i>
            </button>
        </div>
        @if (mostrarModalClientes)
        {
            <ClientesModal OnClienteSeleccionado="AsignarCliente" OnCerrar="OcultarModalClientes" />
        }

        <!-- Botón Cliente por defecto -->
        <div class="col-md-1">
            <label class="form-label d-block">&nbsp;</label>
            <button type="button" class="btn btn-outline-success w-100" @onclick="CargarClientePorDefecto">
                <i class="bi bi-person-check"></i>
            </button>
        </div>

        <!-- Nombre del Cliente -->
        <div class="col-md-5">
            <label class="form-label">Cliente</label>
            <input id="Cliente" class="form-control" value="@cliente.NombreCompleto" readonly />
        </div>
    </div>

    <div class="row mb-3 align-items-end">
        <!-- Tipo y Número Factura -->
        <div class="col-md-3">
            <label for="TipoFactura" class="form-label">Tipo Factura</label>
            <InputSelect id="TipoFactura" class="form-select" @bind-Value="factura.LetraFactura">
                <option value="A">Tipo A</option>
                <option value="B">Tipo B</option>
                <option value="C">Tipo C</option>
            </InputSelect>
        </div>

        <div class="col-md-3">
            <label for="NroFactura" class="form-label">Número</label>
            <InputText disabled id="NroFactura" class="form-control" @bind-Value="factura.NroCompFactura" />
        </div>
        <!-- Fecha -->
        <div class="col-md-3">
            <label for="FechaEmision" class="form-label">Fecha de Emisión</label>
            <InputDate id="FechaEmision" class="form-control" @bind-Value="factura.FechaEmision" />
        </div>

    </div>

    <div class="row mb-3">
        <!-- Forma de Pago -->
        <div class="col-md-4">
            <label for="FormaPago" class="form-label">Forma de Pago</label>
            <InputSelect id="FormaPago" class="form-select" @bind-Value="factura.FormaPago">
                <option value="Contado">Contado</option>
                <option value="Credito">Crédito</option>
                <option value="Transferencia">Transferencia</option>
            </InputSelect>
        </div>

        <!-- Concepto -->
        <div class="col-md-4">
            <label for="FormaPago" class="form-label">Concepto</label>
            <InputSelect id="FormaPago" class="form-select" @bind-Value="factura.ConceptoFactura">
                <option value="Producto">Producto</option>
                <option value="Servicio">Servicio</option>
                <option value="ProductoServicio">Producto/Servicio</option>
            </InputSelect>
        </div>

        <!-- Checkbox "No mover Stock" -->
        <div class="col-md-3 d-flex align-items-center">
            <div class="form-check form-switch mt-3">
                <InputCheckbox id="NoMoverStock"
                               class="form-check-input"
                               @bind-Value="factura.MoverStock" />
                <label class="form-check-label" for="NoMoverStock">No mover Stock</label>
            </div>
        </div>
    </div>

    <div class="row mb-4 border-bottom"></div>

    <h3 class="mb-3 text-secondary fw-bold border-bottom pb-2">Detalle de Factura</h3>
    <!-- Detalle -->
    <table class="table table-bordered table-striped table-dark align-middle">
        <thead class="thead-dark">
            <tr>
                <th style="width: 80px;">Borrar</th> <!-- Borrar -->
                <th style="width: 80px;">Buscar</th> <!-- Buscar -->
                <th style="width: 180px;">Art. Desconocido</th> <!-- Artículo Desconocido -->
                <th style="width: 100px;">Nro Art.</th>
                <th>Nombre</th>
                <th style="width: 100px;">Cantidad</th>
                <th style="width: 80px;">%IVA</th>
                <th style="width: 120px;">Precio</th>
                <th style="width: 120px;">Total</th>
                <th style="width: 160px;">Precio Manual</th> <!-- Cargar Precio Manual -->
            </tr>
        </thead>
        <tbody>
            <tr>
                <!-- Botón Borrar -->
                <td>
                    <button type="button" class="btn btn-sm btn-danger">
                        <i class="bi bi-trash"></i>
                    </button>
                </td>

                <!-- Botón Buscar -->
                <td>
                    <button type="button" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-search"></i>
                    </button>
                </td>

                <!-- Botón Artículo Desconocido -->
                <td>
                    <button type="button" class="btn btn-sm btn-secondary w-100">
                        Cargar
                    </button>
                </td>

                <!-- Número Artículo -->
                <td>
                    <input type="text" class="form-control form-control-sm" placeholder="Código" />
                </td>

                <!-- Nombre Artículo -->
                <td>
                    <input disabled type="text" class="form-control form-control-sm" placeholder="Nombre del producto" />
                </td>

                <!-- Cantidad -->
                <td>
                    <input type="number" class="form-control form-control-sm text-end" min="1" />
                </td>

                <!-- % IVA -->
                <td>
                    <select class="form-select form-select-sm">
                        <option value="21">21%</option>
                        <option value="10.5">10.5%</option>
                        <option value="0">0%</option>
                    </select>
                </td>

                <!-- Precio -->
                <td>
                    <input disabled type="number" class="form-control form-control-sm text-end" step="0.01" />
                </td>

                <!-- Total -->
                <td>
                    <input disabled type="number" class="form-control form-control-sm text-end" step="0.01" readonly />
                </td>

                <!-- Botón Cargar Precio Manual -->
                <td>
                    <button type="button" class="btn btn-sm btn-secondary w-100">
                        Cargar Precio
                    </button>
                </td>
            </tr>
        </tbody>
    </table>



    <div class="mb-4">
        <label for="Detalle" class="form-label">Detalle Adicional</label>
        <InputTextArea id="Detalle" class="form-control" rows="2" @bind-Value="factura.Observaciones" />
    </div>
</EditForm>


@code {
    [Parameter] public int? FacturaId { get; set; }


    private Factura factura = new Factura
        {
            IdLetraFactura = 1,
            IdTipoDocumentoFiscal = 1,
        };

    private List<TipoDocumentoFiscal> tiposDocumentosFiscales = new List<TipoDocumentoFiscal>();
    private List<LetraFactura> letrasFactura = new List<LetraFactura>();
    private Cliente cliente = new Cliente { Nombre = "Consumidor Final", Apellido = "", IdRegimenImpositivo = 1, IdTipoDocumento = 1 };
    private List<FormaPago> formasPago = new List<FormaPago>();
    private List<ConceptoFactura> conceptosFactura = new List<ConceptoFactura>();
    private List<Articulo> articulos = new List<Articulo>();

    private int? IdClienteBuscado = 1;
    private string clienteNombre = string.Empty;
    private bool mostrarModalClientes = false;
    private void MostrarModalClientes() => mostrarModalClientes = true;
    private void OcultarModalClientes() => mostrarModalClientes = false;

    protected override async Task OnInitializedAsync()
    {
        if (FacturaId.HasValue)
        {
            factura = await FacturaService.GetFacturaByIdAsync(FacturaId.Value);
        }
        else
        {
            factura.FechaEmision = DateTime.Today;
            await CargarClientePorDefecto();
        }

    }


    private async Task GuardarFactura()
    {


    }

    private void NavigateToFacturas()
    {
        NavigationManager.NavigateTo("/facturas");
    }

    private void NavigateToClientes()
    {
        NavigationManager.NavigateTo("/clientes");
    }

    private async Task BuscarCliente()
    {
        if (IdClienteBuscado is null || IdClienteBuscado == 0)
            await CargarClientePorDefecto();

        try
        {
            var clienteEncontrado = await ClienteService.GetClienteByIdAsync(IdClienteBuscado.Value);
            cliente = clienteEncontrado;
            factura.IdCliente = cliente.IdCliente;
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"No se encontró el cliente con ID {IdClienteBuscado}");
        }

        StateHasChanged();
    }


    private async Task CargarClientePorDefecto()
    {
        cliente = await ClienteService.GetClientePorDefecto();
        IdClienteBuscado = 1;
        StateHasChanged();
    }

    private void AsignarCliente(Cliente clienteSel)
    {
        Console.WriteLine($"Cliente seleccionado: {clienteSel.IdCliente} - {clienteSel.NombreCompleto}");

        cliente = clienteSel;
        factura.IdCliente = clienteSel.IdCliente;
        IdClienteBuscado = clienteSel.IdCliente; // 👈 sincronizás el input también
        StateHasChanged();
    }
}
