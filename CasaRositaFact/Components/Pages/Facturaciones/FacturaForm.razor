@page "/facturas/formFactura"
@page "/facturas/editar/{FacturaId:int}"
@using CasaRositaFact.Components.Pages.Auxiliares
@using CasaRositaFact.Components.Pages.Facturaciones
@using Services
@using Models
@using static CasaRositaFact.Models.Factura
@inject ClienteService ClienteService
@inject FacturaService FacturaService
@inject IJSRuntime JS
@inject NavigationManager NavigationManager

<h3 class="mb-2 text-info fw-bold border-bottom pb-2">@(FacturaId == null ? "Nueva Factura" : "Editar Factura")</h3>

<EditForm Model="factura" OnValidSubmit="GuardarFactura">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h3 class="mb-3 text-secondary fw-bold border-bottom pb-2">Cabecera de Factura</h3>

    <!-- Búsqueda de Cliente -->
    <div class="row mb-3 align-items-end">
        <!-- Input ID Cliente -->
        <div class="col-md-2">
            <label for="IdCliente" class="form-label">ID Cliente</label>
            <InputNumber id="IdCliente" class="form-control" @bind-Value="cliente.IdCliente" />
        </div>

        <!-- Botón Buscar -->
        <div class="col-md-1">
            <label class="form-label d-block">&nbsp;</label>
            <button type="button" class="btn btn-outline-primary w-100" @onclick="BuscarCliente">
                <i class="bi bi-search"></i> <!-- Bootstrap Icons: lupa -->
            </button>
        </div>

        <!-- Botón Listado Clientes -->
        <div class="col-md-1">
            <label class="form-label d-block">&nbsp;</label>
            <button type="button" class="btn btn-outline-secondary w-100" @onclick="NavigateToClientes">
                <i class="bi bi-people"></i>
            </button>
        </div>

        <!-- Botón Cliente por defecto -->
        <div class="col-md-1">
            <label class="form-label d-block">&nbsp;</label>
            <button type="button" class="btn btn-outline-success w-100" @onclick="CargarClientePorDefecto">
                <i class="bi bi-person-check"></i>
            </button>
        </div>

        <!-- Nombre del Cliente -->
        <div class="col-md-5">
            <label class="form-label">Cliente</label>
            <input id="Cliente" class="form-control" value="@cliente.NombreCompleto" readonly />
        </div>
    </div>

    <div class="row mb-2 align-items-end">
        <!-- Fecha -->
        <div class="col-md-3">
            <label for="FechaEmision" class="form-label">Fecha de Emisión</label>
            <InputDate id="FechaEmision" class="form-control" @bind-Value="factura.FechaEmision" />
        </div>

        <!-- Checkbox "No mover Stock" -->
        <div class="col-md-3 d-flex align-items-center">
            <div class="form-check form-switch mt-3">
                <InputCheckbox id="NoMoverStock"
                class="form-check-input"
                @bind-Value="factura.MoverStock" />
                <label class="form-check-label" for="NoMoverStock">No mover Stock</label>
            </div>
        </div>
    </div>

    <div class="row mb-2 align-items-end">

        <!-- Tipo y Número Factura -->
        <div class="col-md-3">
            <label for="TipoFactura" class="form-label">Tipo Factura</label>
            <InputSelect id="TipoFactura" class="form-select" @bind-Value="factura.LetraFactura">
                <option value="A">Tipo A</option>
                <option value="B">Tipo B</option>
                <option value="C">Tipo C</option>
            </InputSelect>
        </div>

        <div class="col-md-3">
            <label for="NroFactura" class="form-label">Número</label>
            <InputText id="NroFactura" class="form-control" @bind-Value="factura.NroCompFactura" />
        </div>
    </div>

    <div class="row mb-2">
        <!-- Forma de Pago -->
        <div class="col-md-4">
            <label for="FormaPago" class="form-label">Forma de Pago</label>
            <InputSelect id="FormaPago" class="form-select" @bind-Value="factura.FormaPago">
                <option value="Contado">Contado</option>
                <option value="Credito">Crédito</option>
                <option value="Transferencia">Transferencia</option>
            </InputSelect>
        </div>

    </div>

    <!-- Detalle -->
    <div class="mb-4">
        <label for="Detalle" class="form-label">Detalle Adicional</label>
        <InputTextArea id="Detalle" class="form-control" rows="2" @bind-Value="factura.Observaciones" />
    </div>
</EditForm>


@code {
    [Parameter] public int? FacturaId { get; set; }


    private Factura factura = new Factura
        {
            IdLetraFactura = 1,
            IdTipoDocumentoFiscal = 1,
        };

    private List<TipoDocumentoFiscal> tiposDocumentosFiscales = new List<TipoDocumentoFiscal>();
    private List<LetraFactura> letrasFactura = new List<LetraFactura>();
    private Cliente cliente = new Cliente { Nombre = "Consumidor Final", Apellido = "", IdRegimenImpositivo = 1, IdTipoDocumento = 1};
    private List<FormaPago> formasPago = new List<FormaPago>();
    private List<ConceptoFactura> conceptosFactura = new List<ConceptoFactura>();
    private List<Articulo> articulos = new List<Articulo>();

    private int? IdCliente;
    private string clienteNombre = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (FacturaId.HasValue)
        {
            factura = await FacturaService.GetFacturaByIdAsync(FacturaId.Value);
        }
        else
        {
            factura.FechaEmision = DateTime.Today;
            await CargarClientePorDefecto();
        }

    }


    private async Task GuardarFactura()
    {


    }

    private void NavigateToFacturas()
    {
        NavigationManager.NavigateTo("/facturas");
    }

    private void NavigateToClientes()
    {
        NavigationManager.NavigateTo("/clientes");
    }

    private async Task BuscarCliente()
    {
        if (IdCliente is null)
            return;

    }

    private async Task CargarClientePorDefecto()
    {
        cliente = await ClienteService.GetClientePorDefecto();
        StateHasChanged();
    }
}
